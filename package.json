// 1. Create or update these files in your GitHub repository

// File: package.json (in root directory)
{
  "name": "argument-analysis-guide",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-scripts": "5.0.1"
  },
  "devDependencies": {
    "tailwindcss": "^3.3.3",
    "postcss": "^8.4.27",
    "autoprefixer": "^10.4.14"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}

// File: tailwind.config.js (in root directory)
module.exports = {
  content: ["./src/**/*.{js,jsx,ts,tsx}", "./public/index.html"],
  theme: {
    extend: {},
  },
  plugins: [],
}

// File: postcss.config.js (in root directory)
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  }
}

// File: public/index.html
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta name="description" content="Argument Analysis Guide - Interactive Course Material" />
    <title>Argument Analysis Guide</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
  </body>
</html>

// File: src/index.js
import React from 'react';
import ReactDOM from 'react-dom/client';
import './styles.css';
import App from './App';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

// File: src/styles.css
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Add any additional custom styles here */
body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

// File: src/App.js
// Modified version with simple replacements for Card components
import React, { useState } from 'react';

// Simple replacements for shadcn/ui components
const Card = ({ children, className = "" }) => (
  <div className={`bg-white rounded-lg shadow-md ${className}`}>{children}</div>
);

const CardHeader = ({ children, className = "" }) => (
  <div className={`p-4 ${className}`}>{children}</div>
);

const CardContent = ({ children, className = "" }) => (
  <div className={`p-4 ${className}`}>{children}</div>
);

const ArgumentAnalysisGuide = () => {
  const [activeSection, setActiveSection] = useState('overview');
  const [expandedItems, setExpandedItems] = useState({});

  const toggleExpand = (id) => {
    setExpandedItems(prev => ({
      ...prev,
      [id]: !prev[id]
    }));
  };

  const renderHeader = () => (
    <div className="bg-blue-800 text-white p-6 rounded-t-lg">
      <h1 className="text-3xl font-bold mb-2">Week 1: Foundations of Effective Argument Analysis</h1>
      <p className="text-lg">An interactive visual guide to understanding and dismantling arguments</p>
    </div>
  );

  const renderNavigation = () => (
    <div className="flex flex-wrap p-2 bg-blue-100 sticky top-0 z-10">
      <NavButton id="overview" text="Overview" />
      <NavButton id="argument-anatomy" text="Argument Anatomy" />
      <NavButton id="source-verification" text="Source Verification" />
      <NavButton id="strong-weak" text="Strong vs. Weak Arguments" />
      <NavButton id="case-study" text="Huff-Carson Framework" />
    </div>
  );

  const NavButton = ({ id, text }) => (
    <button
      className={`px-4 py-2 m-1 rounded-lg ${activeSection === id ? 'bg-blue-600 text-white' : 'bg-white hover:bg-blue-50'}`}
      onClick={() => setActiveSection(id)}
    >
      {text}
    </button>
  );

  const ExpandableSection = ({ id, title, children }) => (
    <div className="mb-4 border rounded-lg overflow-hidden bg-white">
      <button
        className="w-full p-4 text-left font-semibold bg-blue-50 hover:bg-blue-100 flex justify-between items-center"
        onClick={() => toggleExpand(id)}
      >
        {title}
        <span>{expandedItems[id] ? '−' : '+'}</span>
      </button>
      {expandedItems[id] && (
        <div className="p-4">
          {children}
        </div>
      )}
    </div>
  );

  const renderOverview = () => (
    <div className="p-6">
      <h2 className="text-2xl font-bold mb-4">Course Overview</h2>
      <p className="mb-4">Welcome to Week 1 of our course on effective argument analysis. This week establishes the foundations you'll need to identify, evaluate, and dismantle arguments effectively.</p>
      
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6 my-8">
        <OverviewCard 
          title="Lecture 1" 
          subtitle="The Anatomy of Arguments" 
          description="Learn to identify claims, evidence, and reasoning in any argument"
          icon="📝"
        />
        <OverviewCard 
          title="Lecture 2" 
          subtitle="Source Verification Fundamentals" 
          description="Develop skills to verify and evaluate sources effectively"
          icon="🔍"
        />
        <OverviewCard 
          title="Workshop" 
          subtitle="Identifying Strong vs. Weak Arguments" 
          description="Practice distinguishing between compelling and flawed arguments"
          icon="💪"
        />
        <OverviewCard 
          title="Case Study" 
          subtitle="The Huff-Carson Debate Framework" 
          description="Study effective techniques for dismantling weak arguments"
          icon="⚔️"
        />
      </div>
      
      <div className="bg-yellow-50 border-l-4 border-yellow-400 p-4 my-6">
        <h3 className="font-bold">Learning Journey</h3>
        <p>This interactive guide will help you navigate the key concepts from Week 1. Use the navigation bar above to explore different sections, and click on expandable sections to reveal detailed content.</p>
      </div>
    </div>
  );

  const OverviewCard = ({ title, subtitle, description, icon }) => (
    <div className="bg-white rounded-lg shadow-md p-6 border-l-4 border-blue-500 hover:shadow-lg transition-shadow">
      <div className="flex items-start">
        <div className="text-4xl mr-4">{icon}</div>
        <div>
          <h3 className="font-bold text-lg">{title}</h3>
          <h4 className="text-blue-700 font-semibold">{subtitle}</h4>
          <p className="mt-2 text-gray-600">{description}</p>
        </div>
      </div>
    </div>
  );

  // Continue with your other rendering functions...
  // I'll include just the argument anatomy section as an example:

  const renderArgumentAnatomy = () => (
    <div className="p-6">
      <h2 className="text-2xl font-bold mb-4">The Anatomy of Arguments</h2>
      <p className="mb-6">Every argument consists of three essential components that work together to create a persuasive whole. Understanding this structure is key to effective analysis.</p>
      
      <div className="flex justify-center mb-8">
        <div className="bg-white rounded-lg shadow-lg p-6 max-w-3xl">
          <h3 className="text-xl font-bold text-center mb-6">Core Components of an Argument</h3>
          
          <div className="flex flex-col md:flex-row justify-between">
            <ArgumentComponent 
              title="Claims" 
              description="Assertions or positions that the arguer wants the audience to accept"
              color="blue"
            />
            <ArgumentComponent 
              title="Evidence" 
              description="Supporting information presented to validate the claims"
              color="green"
            />
            <ArgumentComponent 
              title="Reasoning" 
              description="The logical connections made between evidence and claims"
              color="purple"
            />
          </div>
        </div>
      </div>
      
      <ExpandableSection id="claims" title="Claims: The Foundation of Arguments">
        <h4 className="font-bold mb-2">Types of Claims:</h4>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
          <ClaimTypeCard 
            type="Factual Claims" 
            example="The Codex Sinaiticus dates to the 4th century CE"
            description="Assertions about what is or is not the case; can be verified or falsified through evidence"
          />
          <ClaimTypeCard 
            type="Interpretive Claims" 
            example="The absence of certain passages indicates intentional omission"
            description="Assertions about the meaning or significance of facts; requires interpretive frameworks"
          />
        </div>
      </ExpandableSection>
    </div>
  );

  const ArgumentComponent = ({ title, description, color }) => {
    const colorClasses = {
      blue: "bg-blue-100 border-blue-500",
      green: "bg-green-100 border-green-500",
      purple: "bg-purple-100 border-purple-500"
    };
    
    return (
      <div className={`p-4 border-l-4 rounded m-2 w-full md:w-1/3 ${colorClasses[color]}`}>
        <h4 className="font-bold mb-2">{title}</h4>
        <p className="text-sm">{description}</p>
      </div>
    );
  };

  const ClaimTypeCard = ({ type, example, description }) => (
    <div className="bg-blue-50 p-4 rounded-lg border-l-4 border-blue-400">
      <h5 className="font-bold text-blue-800">{type}</h5>
      <div className="italic text-sm my-1">"{example}"</div>
      <p className="text-sm">{description}</p>
    </div>
  );

  // Create placeholders for the other render functions to prevent errors
  const renderSourceVerification = () => (
    <div className="p-6">
      <h2 className="text-2xl font-bold mb-4">Source Verification Fundamentals</h2>
      <p>Develop skills to verify and evaluate sources effectively</p>
    </div>
  );

  const renderStrongWeak = () => (
    <div className="p-6">
      <h2 className="text-2xl font-bold mb-4">Identifying Strong vs. Weak Arguments</h2>
      <p>Practice distinguishing between compelling and flawed arguments</p>
    </div>
  );

  const renderCaseStudy = () => (
    <div className="p-6">
      <h2 className="text-2xl font-bold mb-4">The Huff-Carson Debate Framework</h2>
      <p>Study effective techniques for dismantling weak arguments</p>
    </div>
  );

  const renderContent = () => {
    switch (activeSection) {
      case 'overview': return renderOverview();
      case 'argument-anatomy': return renderArgumentAnatomy();
      case 'source-verification': return renderSourceVerification();
      case 'strong-weak': return renderStrongWeak();
      case 'case-study': return renderCaseStudy();
      default: return renderOverview();
    }
  };

  return (
    <div className="min-h-screen bg-gray-50">
      {renderHeader()}
      {renderNavigation()}
      <div className="container mx-auto">
        {renderContent()}
      </div>
    </div>
  );
};

export default ArgumentAnalysisGuide;
